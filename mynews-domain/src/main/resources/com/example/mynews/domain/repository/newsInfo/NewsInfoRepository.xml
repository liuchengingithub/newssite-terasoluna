<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mynews.domain.repository.newsInfo.NewsInfoRepository">
    <resultMap id="NewsInfoResultMap" type="News">
        <id property="newsId" column="news_id"/>
        <result property="newsTitle" column="news_title"/>
        <result property="newsContent" column="news_content"/>
        <result property="newsAuthor" column="news_author"/>
        <result property="newsPostDate" column="news_post_date" javaType="org.joda.time.DateTime" typeHandler="com.example.mynews.domain.repository.editNews.DateTimeTypeHandler"/>
        <result property="newsCategory" column="news_category"/>
    </resultMap>

    <select id="findAllNews" resultMap="NewsInfoResultMap">
        SELECT news_id,
               news_title,
               news_content,
               news_author,
               news_post_date,
               news_category
        FROM news
        ORDER BY news_post_date DESC
        LIMIT #{pageSize} OFFSET #{offset}

    </select>
    <select id="findById" parameterType="string" resultMap="NewsInfoResultMap">
        SELECT news_id,
               news_title,
               news_content,
               news_author,
               news_post_date,
               news_category
        FROM news
        WHERE news_id = #{newsId}
    </select>
    <select id="findByCategory" parameterType="string" resultMap="NewsInfoResultMap">
        SELECT news_id,
               news_title,
               news_content,
               news_author,
               news_post_date,
               news_category
        FROM news
        WHERE news_category = #{newsCategory}
    </select>
    <select id="findAllCategories" resultType="String">
        SELECT category_name
        FROM category
    </select>
    <select id="findByCriteria" parameterType="NewsInfoSearchCriteria" resultMap="NewsInfoResultMap">
        SELECT
            news_id,
            news_title,
            news_content,
            news_author,
            news_post_date,
            news_category
        FROM
            news
        <include refid="findPageBySearchCriteriaWherePhrase"/>
        LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
    </select>
    <select id="countAllNews" resultType="long">
        SELECT
            count(*)
        FROM news
    </select>
    <select id="countBySearchCriteria" parameterType="NewsInfoSearchCriteria" resultType="long">
        SELECT
            count(*)
        FROM
            news
        <include refid="findPageBySearchCriteriaWherePhrase"/>
    </select>
    <select id="countByCategory" parameterType="string" resultType="long">
        SELECT
            count(*)
        FROM
            news
        WHERE
            news_category = #{category}
    </select>
    <sql id="findPageBySearchCriteriaWherePhrase">
        WHERE
            <bind name="keyword" value="'%'+criteria.keyword+'%'"/>
            (news_title like #{keyword} or news_content like #{keyword})
            <if test="criteria.category != '指定なし'">
                and news_category = #{criteria.category}
            </if>
            <if test="criteria.oldestPostDate != null">
                and news_post_date >= #{criteria.oldestPostDate}
            </if>
    </sql>
</mapper>